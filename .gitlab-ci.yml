image: $CONTAINER_TEST_IMAGE

variables:
  CONTAINER_TEST_IMAGE: gitlab-registry.mpcdf.mpg.de/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME
  OMP_NUM_THREADS: 1

stages:
  - build_docker
  - test
  - release
  - demo_runs

build_docker_from_scratch:
  only:
    - schedules
  image: docker:19.03.8
  stage: build_docker
  before_script:
    - ls
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker build -t $CONTAINER_TEST_IMAGE --no-cache .
    - docker push $CONTAINER_TEST_IMAGE

build_docker_from_cache:
  except:
    - schedules
  image: docker:19.03.8
  stage: build_docker
  before_script:
    - ls
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test_serial:
  stage: test
  script:
    - pytest-3 -q --cov=nifty5 test
    - >
      python3 -m coverage report --omit "*plot*,*distributed_do*" | tee coverage.txt
    - >
      grep TOTAL coverage.txt | awk '{ print "TOTAL: "$4; }'

test_mpi:
  stage: test
  variables:
    OMPI_MCA_btl_vader_single_copy_mechanism: none
  script:
    - mpiexec -n 2 --bind-to none pytest-3 -q test

pages:
  stage: release
  script:
    - sh docs/generate.sh
    - mv docs/build/ public/
  artifacts:
    paths:
    - public
  only:
  - NIFTy_5


before_script:
  - python3 setup.py install --user -f

run_ipynb:
  stage: demo_runs
  script:
    - jupyter nbconvert --execute --ExecutePreprocessor.timeout=None demos/Wiener_Filter.ipynb

run_getting_started_1:
  stage: demo_runs
  script:
    - python3 demos/getting_started_1.py
    - mpiexec -n 2 --bind-to none python3 demos/getting_started_1.py 2> /dev/null
  artifacts:
    paths:
      - '*.png'

run_getting_started_2:
  stage: demo_runs
  script:
    - python3 demos/getting_started_2.py
    - mpiexec -n 2 --bind-to none python3 demos/getting_started_2.py 2> /dev/null
  artifacts:
    paths:
      - '*.png'

run_getting_started_3:
  stage: demo_runs
  script:
    - python3 demos/getting_started_3.py
  artifacts:
    paths:
      - '*.png'

run_bernoulli:
  stage: demo_runs
  script:
    - python3 demos/bernoulli_demo.py
  artifacts:
    paths:
      - '*.png'

run_curve_fitting:
  stage: demo_runs
  script:
    - python3 demos/polynomial_fit.py
  artifacts:
    paths:
      - '*.png'
